DN_ThemeAnnotation=@Theme annotation for UI
DESC_ThemeAnnotation=Checks the presence of @Theme annotation for Vaadin UI class. \
Adds annotation and creates a theme if necessary. 

DN_Theme=@Theme annotation value for UI
DESC_Theme=Checks the existence of the theme specified by @Theme annotation for Vaadin UI class. \
Creates a theme if necessary. 

DN_WebParamUI=@WebServlet UI web parameter
DESC_WebParamUI=Checks whether VaadinServlet is configured to use UI class via @WebServlet annotation.

DN_WebServletHasNoWidgetset=@WebServlet widgetset parameter absence
DESC_WebServletHasNoWidgetset=Checks whether VaadinServlet is configured to use existing \
widgetset via @WebServlet annotation.

DN_WebServletWidgetsetError=@WebServlet widgetset parameter error
DESC_WebServletWidgetsetError=Checks existence of GWT xml file that is configured to use as  \
@WebServlet widgetset parameter.

DN_WebServletIsNotVaadin=@WebServlet ui and widgetset parameters
DESC_WebServletIsNotVaadin=Web servlet that has @WebServlet annotation with ui and widgetset parameters \
should extends VaadinServlet.

DN_VaadinServletConfigurationError=Target for @VaadinServletConfiguration
DESC_VaadinServletConfigurationError=Only subclass of VaadinServlet may be annotated with @VaadinServletConfiguration.

DN_VaadinServletConfigurationWidgetsetError=@VaadinServletConfiguration widgetset parameter error
DESC_VaadinServletConfigurationWidgetsetError=Checks existence of GWT xml file that is configured to use as  \
@VaadinServletConfiguration widgetset parameter.

DN_VaadinServletConfigurationNoWidgetset=@VaadinServletConfiguration widgetset parameter absence
DESC_VaadinServletConfigurationNoWidgetset=Checks whether VaadinServlet is configured to use existing \
widgetset via @VaadinServletConfiguration annotation.

DN_ClientPackage=Client classes' package
DESC_ClientPackage=Checks package of client classes. GWT XML module file defines packages \
that have to be used for all client side classes. GWT compiler doesn't use classes outside of those packages.

DN_Connector=@Connect annotation correctness
DESC_Connector=Checks target of @Connect annotation and its value.
 
DN_SharedStateSer=Shared state serializability
DESC_SharedStateSer=Shared state class should be Serializable. 
 
DN_SharedStateJavaBeans=Shared state is Java Bean
DESC_SharedStateJavaBeans=Shared state class should conform to Java Beans specification. 
 
DN_RpcParametersSer=RPC method's parameters serializability
DESC_RpcParametersSer=RPC method's parameters should be Serializable. 
 
DN_RpcParametersJavaBeans=RPC method's parameter is JavaBean
DESC_RpcParametersJavaBeans=RPC method's parameters should conform to Java Beans specification. 
 
DN_RpcParameterHasTypeVar=Type variable in RPC method's parameter type
DESC_RpcParameterHasTypeVar=RPC method's parameters should not be declared using type variable.
 
DN_RpcParameterHasWildcard=Wildcard variable in RPC method's parameter type
DESC_RpcParameterHasWildcard=RPC method's parameters should not be declared using wildcard.
 
DN_RpcDuplicateMethods=RPC methods with the same name
DESC_RpcDuplicateMethods=GWT compiler doesn't distinguish methods via their signature. As a result methods based on\
 the same name are compiled into one method whose behavior is unexpected at runtime.
 
DN_RpcVoidReturn=RPC method's return type
DESC_RpcVoidReturn=RPC methods have asynchronous nature. Return value has no sense for asynchronous method.

DN_ClientRpcInterface=Use client RPC interface on the clientside
DESC_ClientRpcInterface=Provides an assistance action to create/register client RPC interface for client-side classes.

DN_ServerRpcInterface=Use server RPC interface on serverside
DESC_ServerRpcInterface=Provides an assistance action to create/register server RPC interface for server-side classes.

DN_ClientRpcProxyInterface=Use client RPC interface on serverside
DESC_ClientRpcProxyInterface=Provides an assistance action to generate client RPC interface and its getter for server-side classes.

DN_ServerRpcProxyInterface=Use server RPC interface on clientside
DESC_ServerRpcProxyInterface=Provides an assistance action to generate server RPC interface and its getter for client-side classes.

DN_Connection=Connector class should be connected to a server component
DESC_Connection=Non-abstract ServerConnector implementation class should be connected to some existing \
server side component using @Connect annotation.  

DN_ComponentState=Use State for a custom component 
DESC_ComponentState=Provides an assistance action to generate custom shared State accessor code \
and State subclass for server and client side classes of widget.

DN_ClientNoGwtModule=GWT module file existence for client classes
DESC_ClientNoGwtModule=Widgetset GWT module file is required if project has client-side classes. Otherwise GWT compiler \
will not be able to detect and compile those classes.  

DN_AcceptCriterion=Client-side class for AcceptCriterion implementation 
DESC_AcceptCriterion=Checks for accompanied VAcceptCriterion client side implementation class existence and provides \
an assistance action to create it.  The latter class is required for proper work of AcceptCriterion in DnD.

DN_ComponentHasNoConnector=Use Connector for server component
DESC_ComponentHasNoConnector=Provides an assistance action to generate Connector and widget classes on demand for \
non-abstract server side component class.
